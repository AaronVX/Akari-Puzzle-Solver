import Code.Game as game
import sys
import numpy as np

from Code.AkariPuzzle import AkariPuzzle


def solvePuzzle(puzzle):
    steps = 0
    if solvePuzzleUtil(puzzle, steps):
        puzzle.print_puzzle
        print("total steps: {}".format(steps))
        return True
    else:
        print("solution doesn't exist")
        return False


def solvePuzzleUtil(puzzle, steps):
    if puzzle.isFinished is True:
        return True

    lightBulbs = np.where(puzzle.arr == puzzle.LIGHT_OFF)

    if len(lightBulbs[0]) > 0:
        for row, col in zip(lightBulbs[0], lightBulbs[1]):
            if puzzle.isValidBulb(row, col) and puzzle.isWallNeigbourValid(row, col):
                puzzle.insert_light_bulb(row, col)
                # puzzle.print_puzzle()
                if solvePuzzleUtil(puzzle, steps + 1):
                    return True

    return False


if __name__ == '__main__':
    file = game.read_puzzle_file()
    puzzle = game.get_next_puzzle(file)
    # puzzle.print_puzzle()
    testPuzzle = np.array([[1, 7, 1, 1, 7, 2],
                          [1, 6, 0, 6, 6, 7],
                          [7, 6, 2, 6, 6, 6],
                          [2, 6, 7, 3, 7, 0],
                          [7, 1, 3, 7, 1, 0],
                          [1, 6, 7, 6, 0, 0]], dtype=np.int64)
    np.asarray(testPuzzle)

    test_1 = AkariPuzzle(6, 6, testPuzzle)
    test_1.print_puzzle()
    print(test_1.isFinished())
    # solvePuzzle(puzzle)
